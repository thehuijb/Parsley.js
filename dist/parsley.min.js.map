{"version":3,"file":"parsley.min.js","sources":["../src/parsley/utils.js","../src/parsley/base.js","../src/parsley/defaults.js","../src/parsley/validator.js","../src/parsley/validator_registry.js","../src/parsley/ui.js","../src/parsley/form.js","../src/parsley/constraint.js","../src/parsley/field.js","../src/parsley/multiple.js","../src/parsley/factory.js","../src/parsley/main.js","../src/parsley/pubsub.js","../src/parsley/remote.js","../src/i18n/en.js","../src/vendor/inputevent.js","../src/parsley.js"],"sourcesContent":["import $ from 'jquery';\n\nvar globalID = 1;\nvar pastWarnings = {};\n\nvar Utils = {\n  // Parsley DOM-API\n  // returns object from dom attributes and values\n  attr: function (element, namespace, obj) {\n    var i;\n    var attribute;\n    var attributes;\n    var regex = new RegExp('^' + namespace, 'i');\n\n    if ('undefined' === typeof obj)\n      obj = {};\n    else {\n      // Clear all own properties. This won't affect prototype's values\n      for (i in obj) {\n        if (obj.hasOwnProperty(i))\n          delete obj[i];\n      }\n    }\n\n    if (!element)\n      return obj;\n\n    attributes = element.attributes;\n    for (i = attributes.length; i--; ) {\n      attribute = attributes[i];\n\n      if (attribute && attribute.specified && regex.test(attribute.name)) {\n        obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);\n      }\n    }\n\n    return obj;\n  },\n\n  checkAttr: function (element, namespace, checkAttr) {\n    return element.hasAttribute(namespace + checkAttr);\n  },\n\n  setAttr: function (element, namespace, attr, value) {\n    element.setAttribute(this.dasherize(namespace + attr), String(value));\n  },\n\n  getType: function(element) {\n    return element.getAttribute('type') || 'text';\n  },\n\n  generateID: function () {\n    return '' + globalID++;\n  },\n\n  /** Third party functions **/\n  deserializeValue: function (value) {\n    var num;\n\n    try {\n      return value ?\n        value == \"true\" ||\n        (value == \"false\" ? false :\n        value == \"null\" ? null :\n        !isNaN(num = Number(value)) ? num :\n        /^[\\[\\{]/.test(value) ? JSON.parse(value) :\n        value)\n        : value;\n    } catch (e) { return value; }\n  },\n\n  // Zepto camelize function\n  camelize: function (str) {\n    return str.replace(/-+(.)?/g, function (match, chr) {\n      return chr ? chr.toUpperCase() : '';\n    });\n  },\n\n  // Zepto dasherize function\n  dasherize: function (str) {\n    return str.replace(/::/g, '/')\n      .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n      .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n      .replace(/_/g, '-')\n      .toLowerCase();\n  },\n\n  warn: function () {\n    if (window.console && 'function' === typeof window.console.warn)\n      window.console.warn(...arguments);\n  },\n\n  warnOnce: function(msg) {\n    if (!pastWarnings[msg]) {\n      pastWarnings[msg] = true;\n      this.warn(...arguments);\n    }\n  },\n\n  _resetWarnings: function () {\n    pastWarnings = {};\n  },\n\n  trimString: function(string) {\n    return string.replace(/^\\s+|\\s+$/g, '');\n  },\n\n  parse: {\n    date: function(string) {\n      let parsed = string.match(/^(\\d{4,})-(\\d\\d)-(\\d\\d)$/);\n      if (!parsed)\n        return null;\n      let [_, year, month, day] = parsed.map(x => parseInt(x, 10));\n      let date = new Date(year, month - 1, day);\n      if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day)\n        return null;\n      return date;\n    },\n    string: function(string) {\n      return string;\n    },\n    integer: function(string) {\n      if (isNaN(string))\n        return null;\n      return parseInt(string, 10);\n    },\n    number: function(string) {\n      if (isNaN(string))\n        throw null;\n      return parseFloat(string);\n    },\n    'boolean': function _boolean(string) {\n      return !(/^\\s*false\\s*$/i.test(string));\n    },\n    object: function(string) {\n      return Utils.deserializeValue(string);\n    },\n    regexp: function(regexp) {\n      var flags = '';\n\n      // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n      if (/^\\/.*\\/(?:[gimy]*)$/.test(regexp)) {\n        // Replace the regexp literal string with the first match group: ([gimy]*)\n        // If no flag is present, this will be a blank string\n        flags = regexp.replace(/.*\\/([gimy]*)$/, '$1');\n        // Again, replace the regexp literal string with the first match group:\n        // everything excluding the opening and closing slashes and the flags\n        regexp = regexp.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n      } else {\n        // Anchor regexp:\n        regexp = '^' + regexp + '$';\n      }\n      return new RegExp(regexp, flags);\n    }\n  },\n\n  parseRequirement: function(requirementType, string) {\n    var converter = this.parse[requirementType || 'string'];\n    if (!converter)\n      throw 'Unknown requirement specification: \"' + requirementType + '\"';\n    let converted = converter(string);\n    if (converted === null)\n      throw `Requirement is not a ${requirementType}: \"${string}\"`;\n    return converted;\n  },\n\n  namespaceEvents: function(events, namespace) {\n    events = this.trimString(events || '').split(/\\s+/);\n    if (!events[0])\n      return '';\n    return $.map(events, evt => `${evt}.${namespace}`).join(' ');\n  },\n\n  difference: function(array, remove) {\n    // This is O(N^2), should be optimized\n    let result = [];\n    $.each(array, (_, elem) => {\n      if (remove.indexOf(elem) == -1)\n        result.push(elem);\n    });\n    return result;\n  },\n\n  // Alter-ego to native Promise.all, but for jQuery\n  all: function(promises) {\n    // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements\n    return $.when(...promises, 42, 42);\n  },\n\n  // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill\n  objectCreate: Object.create || (function () {\n    var Object = function () {};\n    return function (prototype) {\n      if (arguments.length > 1) {\n        throw Error('Second argument not supported');\n      }\n      if (typeof prototype != 'object') {\n        throw TypeError('Argument must be an object');\n      }\n      Object.prototype = prototype;\n      var result = new Object();\n      Object.prototype = null;\n      return result;\n    };\n  })(),\n\n  _SubmitSelector: 'input[type=\"submit\"], button:submit'\n};\n\nexport default Utils;\n","import $ from 'jquery';\nimport Utils from './utils';\n\nvar Base = function () {\n  this.__id__ = Utils.generateID();\n};\n\nBase.prototype = {\n  asyncSupport: true, // Deprecated\n\n  _pipeAccordingToValidationResult: function () {\n    var pipe = () => {\n      var r = $.Deferred();\n      if (true !== this.validationResult)\n        r.reject();\n      return r.resolve().promise();\n    };\n    return [pipe, pipe];\n  },\n\n  actualizeOptions: function () {\n    Utils.attr(this.element, this.options.namespace, this.domOptions);\n    if (this.parent && this.parent.actualizeOptions)\n      this.parent.actualizeOptions();\n    return this;\n  },\n\n  _resetOptions: function (initOptions) {\n    this.domOptions = Utils.objectCreate(this.parent.options);\n    this.options = Utils.objectCreate(this.domOptions);\n    // Shallow copy of ownProperties of initOptions:\n    for (var i in initOptions) {\n      if (initOptions.hasOwnProperty(i))\n        this.options[i] = initOptions[i];\n    }\n    this.actualizeOptions();\n  },\n\n  _listeners: null,\n\n  // Register a callback for the given event name\n  // Callback is called with context as the first argument and the `this`\n  // The context is the current parsley instance, or window.Parsley if global\n  // A return value of `false` will interrupt the calls\n  on: function (name, fn) {\n    this._listeners = this._listeners || {};\n    var queue = this._listeners[name] = this._listeners[name] || [];\n    queue.push(fn);\n\n    return this;\n  },\n\n  // Deprecated. Use `on` instead\n  subscribe: function(name, fn) {\n    $.listenTo(this, name.toLowerCase(), fn);\n  },\n\n  // Unregister a callback (or all if none is given) for the given event name\n  off: function (name, fn) {\n    var queue = this._listeners && this._listeners[name];\n    if (queue) {\n      if (!fn) {\n        delete this._listeners[name];\n      } else {\n        for (var i = queue.length; i--; )\n          if (queue[i] === fn)\n            queue.splice(i, 1);\n      }\n    }\n    return this;\n  },\n\n  // Deprecated. Use `off`\n  unsubscribe: function(name, fn) {\n    $.unsubscribeTo(this, name.toLowerCase());\n  },\n\n  // Trigger an event of the given name\n  // A return value of `false` interrupts the callback chain\n  // Returns false if execution was interrupted\n  trigger: function (name, target, extraArg) {\n    target = target || this;\n    var queue = this._listeners && this._listeners[name];\n    var result;\n    var parentResult;\n    if (queue) {\n      for (var i = queue.length; i--; ) {\n        result = queue[i].call(target, target, extraArg);\n        if (result === false) return result;\n      }\n    }\n    if (this.parent) {\n      return this.parent.trigger(name, target, extraArg);\n    }\n    return true;\n  },\n\n  asyncIsValid: function (group, force) {\n    Utils.warnOnce(\"asyncIsValid is deprecated; please use whenValid instead\");\n    return this.whenValid({group, force});\n  },\n\n  _findRelated: function () {\n    return this.options.multiple ?\n      $(this.parent.element.querySelectorAll(`[${this.options.namespace}multiple=\"${this.options.multiple}\"]`))\n    : this.$element;\n  }\n};\n\nexport default Base;\n","// All these options could be overriden and specified directly in DOM using\n// `data-parsley-` default DOM-API\n// eg: `inputs` can be set in DOM using `data-parsley-inputs=\"input, textarea\"`\n// eg: `data-parsley-stop-on-first-failing-constraint=\"false\"`\n\nvar Defaults = {\n  // ### General\n\n  // Default data-namespace for DOM API\n  namespace: 'data-parsley-',\n\n  // Supported inputs by default\n  inputs: 'input, textarea, select',\n\n  // Excluded inputs by default\n  excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden]',\n\n  // Stop validating field on highest priority failing constraint\n  priorityEnabled: true,\n\n  // ### Field only\n\n  // identifier used to group together inputs (e.g. radio buttons...)\n  multiple: null,\n\n  // identifier (or array of identifiers) used to validate only a select group of inputs\n  group: null,\n\n  // ### UI\n  // Enable\\Disable error messages\n  uiEnabled: true,\n\n  // Key events threshold before validation\n  validationThreshold: 3,\n\n  // Focused field on form validation error. 'first'|'last'|'none'\n  focus: 'first',\n\n  // event(s) that will trigger validation before first failure. eg: `input`...\n  trigger: false,\n\n  // event(s) that will trigger validation after first failure.\n  triggerAfterFailure: 'input',\n\n  // Class that would be added on every failing validation Parsley field\n  errorClass: 'parsley-error',\n\n  // Same for success validation\n  successClass: 'parsley-success',\n\n  // Return the `$element` that will receive these above success or error classes\n  // Could also be (and given directly from DOM) a valid selector like `'#div'`\n  classHandler: function (Field) {},\n\n  // Return the `$element` where errors will be appended\n  // Could also be (and given directly from DOM) a valid selector like `'#div'`\n  errorsContainer: function (Field) {},\n\n  // ul elem that would receive errors' list\n  errorsWrapper: '<ul class=\"parsley-errors-list\"></ul>',\n\n  // li elem that would receive error message\n  errorTemplate: '<li></li>'\n};\n\nexport default Defaults;\n","import $ from 'jquery';\nimport Utils from './utils';\n\nvar convertArrayRequirement = function(string, length) {\n  var m = string.match(/^\\s*\\[(.*)\\]\\s*$/);\n  if (!m)\n    throw 'Requirement is not an array: \"' + string + '\"';\n  var values = m[1].split(',').map(Utils.trimString);\n  if (values.length !== length)\n    throw 'Requirement has ' + values.length + ' values when ' + length + ' are needed';\n  return values;\n};\n\nvar convertExtraOptionRequirement = function(requirementSpec, string, extraOptionReader) {\n  var main = null;\n  var extra = {};\n  for (var key in requirementSpec) {\n    if (key) {\n      var value = extraOptionReader(key);\n      if ('string' === typeof value)\n        value = Utils.parseRequirement(requirementSpec[key], value);\n      extra[key] = value;\n    } else {\n      main = Utils.parseRequirement(requirementSpec[key], string);\n    }\n  }\n  return [main, extra];\n};\n\n// A Validator needs to implement the methods `validate` and `parseRequirements`\n\nvar Validator = function(spec) {\n  $.extend(true, this, spec);\n};\n\nValidator.prototype = {\n  // Returns `true` iff the given `value` is valid according the given requirements.\n  validate: function(value, requirementFirstArg) {\n    if (this.fn) { // Legacy style validator\n\n      if (arguments.length > 3)  // If more args then value, requirement, instance...\n        requirementFirstArg = [].slice.call(arguments, 1, -1);  // Skip first arg (value) and last (instance), combining the rest\n      return this.fn(value, requirementFirstArg);\n    }\n\n    if (Array.isArray(value)) {\n      if (!this.validateMultiple)\n        throw 'Validator `' + this.name + '` does not handle multiple values';\n      return this.validateMultiple(...arguments);\n    } else {\n      const args = [...arguments];\n      let instance = args[args.length - 1];\n      if (this.validateDate && instance._isDateInput()) {\n        args[0] = Utils.parse.date(args[0]);\n        if (args[0] === null)\n          return false;\n        return this.validateDate(...args);\n      }\n      if (this.validateNumber) {\n        if (!value) // Builtin validators all accept empty strings, except `required` of course\n          return true;\n        if (isNaN(value))\n          return false;\n        args[0] = parseFloat(args[0]);\n        return this.validateNumber(...args);\n      }\n      if (this.validateString) {\n        return this.validateString(...args);\n      }\n      throw 'Validator `' + this.name + '` only handles multiple values';\n    }\n  },\n\n  // Parses `requirements` into an array of arguments,\n  // according to `this.requirementType`\n  parseRequirements: function(requirements, extraOptionReader) {\n    if ('string' !== typeof requirements) {\n      // Assume requirement already parsed\n      // but make sure we return an array\n      return Array.isArray(requirements) ? requirements : [requirements];\n    }\n    var type = this.requirementType;\n    if (Array.isArray(type)) {\n      var values = convertArrayRequirement(requirements, type.length);\n      for (var i = 0; i < values.length; i++)\n        values[i] = Utils.parseRequirement(type[i], values[i]);\n      return values;\n    } else if ($.isPlainObject(type)) {\n      return convertExtraOptionRequirement(type, requirements, extraOptionReader);\n    } else {\n      return [Utils.parseRequirement(type, requirements)];\n    }\n  },\n  // Defaults:\n  requirementType: 'string',\n\n  priority: 2\n\n};\n\nexport default Validator;\n","import $ from 'jquery';\nimport Utils from './utils';\nimport Defaults from './defaults';\nimport Validator from './validator';\n\nvar ValidatorRegistry = function (validators, catalog) {\n  this.__class__ = 'ValidatorRegistry';\n\n  // Default Parsley locale is en\n  this.locale = 'en';\n\n  this.init(validators || {}, catalog || {});\n};\n\nvar typeTesters =  {\n  email: /^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))$/,\n\n  // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers\n  number: /^-?(\\d*\\.)?\\d+(e[-+]?\\d+)?$/i,\n\n  integer: /^-?\\d+$/,\n\n  digits: /^\\d+$/,\n\n  alphanum: /^\\w+$/i,\n\n  date: {\n    test: value => Utils.parse.date(value) !== null\n  },\n\n  url: new RegExp(\n      \"^\" +\n        // protocol identifier\n        \"(?:(?:https?|ftp)://)?\" + // ** mod: make scheme optional\n        // user:pass authentication\n        \"(?:\\\\S+(?::\\\\S*)?@)?\" +\n        \"(?:\" +\n          // IP address exclusion\n          // private & local networks\n          // \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +   // ** mod: allow local networks\n          // \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n          // \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n          // IP address dotted notation octets\n          // excludes loopback network 0.0.0.0\n          // excludes reserved space >= 224.0.0.0\n          // excludes network & broacast addresses\n          // (first & last IP address of each class)\n          \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\n          \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\n          \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\n        \"|\" +\n          // host name\n          \"(?:(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)\" +\n          // domain name\n          \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)*\" +\n          // TLD identifier\n          \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff]{2,}))\" +\n        \")\" +\n        // port number\n        \"(?::\\\\d{2,5})?\" +\n        // resource path\n        \"(?:/\\\\S*)?\" +\n      \"$\"\n    )\n};\ntypeTesters.range = typeTesters.number;\n\n// See http://stackoverflow.com/a/10454560/8279\nvar decimalPlaces = num => {\n  var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n  if (!match) { return 0; }\n  return Math.max(\n       0,\n       // Number of digits right of decimal point.\n       (match[1] ? match[1].length : 0) -\n       // Adjust for scientific notation.\n       (match[2] ? +match[2] : 0));\n};\n\n// parseArguments('number', ['1', '2']) => [1, 2]\nlet parseArguments = (type, args) => args.map(Utils.parse[type]);\n// operatorToValidator returns a validating function for an operator function, applied to the given type\nlet operatorToValidator = (type, operator) => {\n  return (value, ...requirementsAndInput) => {\n    requirementsAndInput.pop(); // Get rid of `input` argument\n    return operator(value, ...parseArguments(type, requirementsAndInput));\n  };\n};\n\nlet comparisonOperator = operator => ({\n  validateDate: operatorToValidator('date', operator),\n  validateNumber: operatorToValidator('number', operator),\n  requirementType: operator.length <= 2 ? 'string' : ['string', 'string'], // Support operators with a 1 or 2 requirement(s)\n  priority: 30\n});\n\nValidatorRegistry.prototype = {\n  init: function (validators, catalog) {\n    this.catalog = catalog;\n    // Copy prototype's validators:\n    this.validators = Object.assign({}, this.validators);\n\n    for (var name in validators)\n      this.addValidator(name, validators[name].fn, validators[name].priority);\n\n    window.Parsley.trigger('parsley:validator:init');\n  },\n\n  // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n\n  setLocale: function (locale) {\n    if ('undefined' === typeof this.catalog[locale])\n      throw new Error(locale + ' is not available in the catalog');\n\n    this.locale = locale;\n\n    return this;\n  },\n\n  // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`\n  addCatalog: function (locale, messages, set) {\n    if ('object' === typeof messages)\n      this.catalog[locale] = messages;\n\n    if (true === set)\n      return this.setLocale(locale);\n\n    return this;\n  },\n\n  // Add a specific message for a given constraint in a given locale\n  addMessage: function (locale, name, message) {\n    if ('undefined' === typeof this.catalog[locale])\n      this.catalog[locale] = {};\n\n    this.catalog[locale][name] = message;\n\n    return this;\n  },\n\n  // Add messages for a given locale\n  addMessages: function (locale, nameMessageObject) {\n    for (var name in nameMessageObject)\n      this.addMessage(locale, name, nameMessageObject[name]);\n\n    return this;\n  },\n\n  // Add a new validator\n  //\n  //    addValidator('custom', {\n  //        requirementType: ['integer', 'integer'],\n  //        validateString: function(value, from, to) {},\n  //        priority: 22,\n  //        messages: {\n  //          en: \"Hey, that's no good\",\n  //          fr: \"Aye aye, pas bon du tout\",\n  //        }\n  //    })\n  //\n  // Old API was addValidator(name, function, priority)\n  //\n  addValidator: function (name, arg1, arg2) {\n    if (this.validators[name])\n      Utils.warn('Validator \"' + name + '\" is already defined.');\n    else if (Defaults.hasOwnProperty(name)) {\n      Utils.warn('\"' + name + '\" is a restricted keyword and is not a valid validator name.');\n      return;\n    }\n    return this._setValidator(...arguments);\n  },\n\n  hasValidator: function (name) {\n    return !!this.validators[name];\n  },\n\n  updateValidator: function (name, arg1, arg2) {\n    if (!this.validators[name]) {\n      Utils.warn('Validator \"' + name + '\" is not already defined.');\n      return this.addValidator(...arguments);\n    }\n    return this._setValidator(...arguments);\n  },\n\n  removeValidator: function (name) {\n    if (!this.validators[name])\n      Utils.warn('Validator \"' + name + '\" is not defined.');\n\n    delete this.validators[name];\n\n    return this;\n  },\n\n  _setValidator: function (name, validator, priority) {\n    if ('object' !== typeof validator) {\n      // Old style validator, with `fn` and `priority`\n      validator = {\n        fn: validator,\n        priority: priority\n      };\n    }\n    if (!validator.validate) {\n      validator = new Validator(validator);\n    }\n    this.validators[name] = validator;\n\n    for (var locale in validator.messages || {})\n      this.addMessage(locale, name, validator.messages[locale]);\n\n    return this;\n  },\n\n  getErrorMessage: function (constraint) {\n    var message;\n\n    // Type constraints are a bit different, we have to match their requirements too to find right error message\n    if ('type' === constraint.name) {\n      var typeMessages = this.catalog[this.locale][constraint.name] || {};\n      message = typeMessages[constraint.requirements];\n    } else\n      message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);\n\n    return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;\n  },\n\n  // Kind of light `sprintf()` implementation\n  formatMessage: function (string, parameters) {\n    if ('object' === typeof parameters) {\n      for (var i in parameters)\n        string = this.formatMessage(string, parameters[i]);\n\n      return string;\n    }\n\n    return 'string' === typeof string ? string.replace(/%s/i, parameters) : '';\n  },\n\n  // Here is the Parsley default validators list.\n  // A validator is an object with the following key values:\n  //  - priority: an integer\n  //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these\n  //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise\n  // Alternatively, a validator can be a function that returns such an object\n  //\n  validators: {\n    notblank: {\n      validateString: function(value) {\n        return /\\S/.test(value);\n      },\n      priority: 2\n    },\n    required: {\n      validateMultiple: function(values) {\n        return values.length > 0;\n      },\n      validateString: function(value) {\n        return /\\S/.test(value);\n      },\n      priority: 512\n    },\n    type: {\n      validateString: function(value, type, {step = 'any', base = 0} = {}) {\n        var tester = typeTesters[type];\n        if (!tester) {\n          throw new Error('validator type `' + type + '` is not supported');\n        }\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        if (!tester.test(value))\n          return false;\n        if ('number' === type) {\n          if (!/^any$/i.test(step || '')) {\n            var nb = Number(value);\n            var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));\n            if (decimalPlaces(nb) > decimals) // Value can't have too many decimals\n              return false;\n            // Be careful of rounding errors by using integers.\n            var toInt = f => Math.round(f * Math.pow(10, decimals));\n            if ((toInt(nb) - toInt(base)) % toInt(step) != 0)\n              return false;\n          }\n        }\n        return true;\n      },\n      requirementType: {\n        '': 'string',\n        step: 'string',\n        base: 'number'\n      },\n      priority: 256\n    },\n    pattern: {\n      validateString: function(value, regexp) {\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        return regexp.test(value);\n      },\n      requirementType: 'regexp',\n      priority: 64\n    },\n    minlength: {\n      validateString: function (value, requirement) {\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        return value.length >= requirement;\n      },\n      requirementType: 'integer',\n      priority: 30\n    },\n    maxlength: {\n      validateString: function (value, requirement) {\n        return value.length <= requirement;\n      },\n      requirementType: 'integer',\n      priority: 30\n    },\n    length: {\n      validateString: function (value, min, max) {\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        return value.length >= min && value.length <= max;\n      },\n      requirementType: ['integer', 'integer'],\n      priority: 30\n    },\n    mincheck: {\n      validateMultiple: function (values, requirement) {\n        return values.length >= requirement;\n      },\n      requirementType: 'integer',\n      priority: 30\n    },\n    maxcheck: {\n      validateMultiple: function (values, requirement) {\n        return values.length <= requirement;\n      },\n      requirementType: 'integer',\n      priority: 30\n    },\n    check: {\n      validateMultiple: function (values, min, max) {\n        return values.length >= min && values.length <= max;\n      },\n      requirementType: ['integer', 'integer'],\n      priority: 30\n    },\n    min: comparisonOperator((value, requirement) => value >= requirement),\n    max: comparisonOperator((value, requirement) => value <= requirement),\n    range: comparisonOperator((value, min, max) => value >= min && value <= max),\n    equalto: {\n      validateString: function (value, refOrValue) {\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        var $reference = $(refOrValue);\n        if ($reference.length)\n          return value === $reference.val();\n        else\n          return value === refOrValue;\n      },\n      priority: 256\n    },\n    euvatin: {\n      validateString: function (value, refOrValue) {\n        if (!value) {\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        }\n\n        var re = /^[A-Z][A-Z][A-Za-z0-9 -]{2,}$/;\n        return re.test(value);\n      },\n      priority: 30,\n    },\n  }\n};\n\nexport default ValidatorRegistry;\n","import $ from 'jquery';\nimport Utils from './utils';\n\nvar UI = {};\n\nvar diffResults = function (newResult, oldResult, deep) {\n  var added = [];\n  var kept = [];\n\n  for (var i = 0; i < newResult.length; i++) {\n    var found = false;\n\n    for (var j = 0; j < oldResult.length; j++)\n      if (newResult[i].assert.name === oldResult[j].assert.name) {\n        found = true;\n        break;\n      }\n\n    if (found)\n      kept.push(newResult[i]);\n    else\n      added.push(newResult[i]);\n  }\n\n  return {\n    kept: kept,\n    added: added,\n    removed: !deep ? diffResults(oldResult, newResult, true).added : []\n  };\n};\n\nUI.Form = {\n\n  _actualizeTriggers: function () {\n    this.$element.on('submit.Parsley', evt => { this.onSubmitValidate(evt); });\n    this.$element.on('click.Parsley', Utils._SubmitSelector, evt => { this.onSubmitButton(evt); });\n\n    // UI could be disabled\n    if (false === this.options.uiEnabled)\n      return;\n\n    this.element.setAttribute('novalidate', '');\n  },\n\n  focus: function () {\n    this._focusedField = null;\n\n    if (true === this.validationResult || 'none' === this.options.focus)\n      return null;\n\n    for (var i = 0; i < this.fields.length; i++) {\n      var field = this.fields[i];\n      if (true !== field.validationResult && field.validationResult.length > 0 && 'undefined' === typeof field.options.noFocus) {\n        this._focusedField = field.$element;\n        if ('first' === this.options.focus)\n          break;\n      }\n    }\n\n    if (null === this._focusedField)\n      return null;\n\n    return this._focusedField.focus();\n  },\n\n  _destroyUI: function () {\n    // Reset all event listeners\n    this.$element.off('.Parsley');\n  }\n\n};\n\nUI.Field = {\n\n  _reflowUI: function () {\n    this._buildUI();\n\n    // If this field doesn't have an active UI don't bother doing something\n    if (!this._ui)\n      return;\n\n    // Diff between two validation results\n    var diff = diffResults(this.validationResult, this._ui.lastValidationResult);\n\n    // Then store current validation result for next reflow\n    this._ui.lastValidationResult = this.validationResult;\n\n    // Handle valid / invalid / none field class\n    this._manageStatusClass();\n\n    // Add, remove, updated errors messages\n    this._manageErrorsMessages(diff);\n\n    // Triggers impl\n    this._actualizeTriggers();\n\n    // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user\n    if ((diff.kept.length || diff.added.length) && !this._failedOnce) {\n      this._failedOnce = true;\n      this._actualizeTriggers();\n    }\n  },\n\n  // Returns an array of field's error message(s)\n  getErrorsMessages: function () {\n    // No error message, field is valid\n    if (true === this.validationResult)\n      return [];\n\n    var messages = [];\n\n    for (var i = 0; i < this.validationResult.length; i++)\n      messages.push(this.validationResult[i].errorMessage ||\n       this._getErrorMessage(this.validationResult[i].assert));\n\n    return messages;\n  },\n\n  // It's a goal of Parsley that this method is no longer required [#1073]\n  addError: function (name, {message, assert, updateClass = true} = {}) {\n    this._buildUI();\n    this._addError(name, {message, assert});\n\n    if (updateClass)\n      this._errorClass();\n  },\n\n  // It's a goal of Parsley that this method is no longer required [#1073]\n  updateError: function (name, {message, assert, updateClass = true} = {}) {\n    this._buildUI();\n    this._updateError(name, {message, assert});\n\n    if (updateClass)\n      this._errorClass();\n  },\n\n  // It's a goal of Parsley that this method is no longer required [#1073]\n  removeError: function (name, {updateClass = true} = {}) {\n    this._buildUI();\n    this._removeError(name);\n\n    // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult\n    // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.\n    if (updateClass)\n      this._manageStatusClass();\n  },\n\n  _manageStatusClass: function () {\n    if (this.hasConstraints() && this.needsValidation() && true === this.validationResult)\n      this._successClass();\n    else if (this.validationResult.length > 0)\n      this._errorClass();\n    else\n      this._resetClass();\n  },\n\n  _manageErrorsMessages: function (diff) {\n    if ('undefined' !== typeof this.options.errorsMessagesDisabled)\n      return;\n\n    // Case where we have errorMessage option that configure an unique field error message, regardless failing validators\n    if ('undefined' !== typeof this.options.errorMessage) {\n      if ((diff.added.length || diff.kept.length)) {\n        this._insertErrorWrapper();\n\n        if (0 === this._ui.$errorsWrapper.find('.parsley-custom-error-message').length)\n          this._ui.$errorsWrapper\n            .append(\n              $(this.options.errorTemplate)\n              .addClass('parsley-custom-error-message')\n            );\n\n        return this._ui.$errorsWrapper\n          .addClass('filled')\n          .find('.parsley-custom-error-message')\n          .html(this.options.errorMessage);\n      }\n\n      return this._ui.$errorsWrapper\n        .removeClass('filled')\n        .find('.parsley-custom-error-message')\n        .remove();\n    }\n\n    // Show, hide, update failing constraints messages\n    for (var i = 0; i < diff.removed.length; i++)\n      this._removeError(diff.removed[i].assert.name);\n\n    for (i = 0; i < diff.added.length; i++)\n      this._addError(diff.added[i].assert.name, {message: diff.added[i].errorMessage, assert: diff.added[i].assert});\n\n    for (i = 0; i < diff.kept.length; i++)\n      this._updateError(diff.kept[i].assert.name, {message: diff.kept[i].errorMessage, assert: diff.kept[i].assert});\n  },\n\n\n  _addError: function (name, {message, assert}) {\n    this._insertErrorWrapper();\n    this._ui.$errorClassHandler\n      .attr('aria-describedby', this._ui.errorsWrapperId);\n    this._ui.$errorsWrapper\n      .addClass('filled')\n      .append(\n        $(this.options.errorTemplate)\n        .addClass('parsley-' + name)\n        .html(message || this._getErrorMessage(assert))\n      );\n  },\n\n  _updateError: function (name, {message, assert}) {\n    this._ui.$errorsWrapper\n      .addClass('filled')\n      .find('.parsley-' + name)\n      .html(message || this._getErrorMessage(assert));\n  },\n\n  _removeError: function (name) {\n    this._ui.$errorClassHandler\n      .removeAttr('aria-describedby');\n    this._ui.$errorsWrapper\n      .removeClass('filled')\n      .find('.parsley-' + name)\n      .remove();\n  },\n\n  _getErrorMessage: function (constraint) {\n    var customConstraintErrorMessage = constraint.name + 'Message';\n\n    if ('undefined' !== typeof this.options[customConstraintErrorMessage])\n      return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);\n\n    return window.Parsley.getErrorMessage(constraint);\n  },\n\n  _buildUI: function () {\n    // UI could be already built or disabled\n    if (this._ui || false === this.options.uiEnabled)\n      return;\n\n    var _ui = {};\n\n    // Give field its Parsley id in DOM\n    this.element.setAttribute(this.options.namespace + 'id', this.__id__);\n\n    /** Generate important UI elements and store them in this **/\n    // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes\n    _ui.$errorClassHandler = this._manageClassHandler();\n\n    // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer\n    _ui.errorsWrapperId = 'parsley-id-' + (this.options.multiple ? 'multiple-' + this.options.multiple : this.__id__);\n    _ui.$errorsWrapper = $(this.options.errorsWrapper).attr('id', _ui.errorsWrapperId);\n\n    // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly\n    _ui.lastValidationResult = [];\n    _ui.validationInformationVisible = false;\n\n    // Store it in this for later\n    this._ui = _ui;\n  },\n\n  // Determine which element will have `parsley-error` and `parsley-success` classes\n  _manageClassHandler: function () {\n    // Class handled could also be determined by function given in Parsley options\n    if ('string' === typeof this.options.classHandler && $(this.options.classHandler).length)\n      return $(this.options.classHandler);\n\n    // Class handled could also be determined by function given in Parsley options\n    var $handlerFunction = this.options.classHandler;\n\n    // It might also be the function name of a global function\n    if ('string' === typeof this.options.classHandler && 'function' === typeof window[this.options.classHandler])\n      $handlerFunction = window[this.options.classHandler];\n\n    if ('function' === typeof $handlerFunction) {\n      var $handler = $handlerFunction.call(this, this);\n\n      // If this function returned a valid existing DOM element, go for it\n      if ('undefined' !== typeof $handler && $handler.length)\n        return $handler;\n    } else if ('object' === typeof $handlerFunction && $handlerFunction instanceof jQuery && $handlerFunction.length) {\n      return $handlerFunction;\n    } else if ($handlerFunction) {\n      Utils.warn('The class handler `' + $handlerFunction + '` does not exist in DOM nor as a global JS function');\n    }\n\n    return this._inputHolder();\n  },\n\n  _inputHolder: function() {\n    // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container\n    if (!this.options.multiple || this.element.nodeName === 'SELECT')\n      return this.$element;\n\n    // But if multiple element (radio, checkbox), that would be their parent\n    return this.$element.parent();\n  },\n\n  _insertErrorWrapper: function () {\n    var $errorsContainer = this.options.errorsContainer;\n\n    // Nothing to do if already inserted\n    if (0 !== this._ui.$errorsWrapper.parent().length)\n      return this._ui.$errorsWrapper.parent();\n\n    if ('string' === typeof $errorsContainer) {\n      if ($($errorsContainer).length)\n        return $($errorsContainer).append(this._ui.$errorsWrapper);\n      else if ('function' === typeof window[$errorsContainer])\n        $errorsContainer = window[$errorsContainer];\n      else\n        Utils.warn('The errors container `' + $errorsContainer + '` does not exist in DOM nor as a global JS function');\n    }\n\n    if ('function' === typeof $errorsContainer)\n      $errorsContainer = $errorsContainer.call(this, this);\n\n    if ('object' === typeof $errorsContainer && $errorsContainer.length)\n      return $errorsContainer.append(this._ui.$errorsWrapper);\n\n    return this._inputHolder().after(this._ui.$errorsWrapper);\n  },\n\n  _actualizeTriggers: function () {\n    var $toBind = this._findRelated();\n    var trigger;\n\n    // Remove Parsley events already bound on this field\n    $toBind.off('.Parsley');\n    if (this._failedOnce)\n      $toBind.on(Utils.namespaceEvents(this.options.triggerAfterFailure, 'Parsley'), () => {\n        this._validateIfNeeded();\n      });\n    else if (trigger = Utils.namespaceEvents(this.options.trigger, 'Parsley')) {\n      $toBind.on(trigger, event => {\n        this._validateIfNeeded(event);\n      });\n    }\n  },\n\n  _validateIfNeeded: function (event) {\n    // For keyup, keypress, keydown, input... events that could be a little bit obstrusive\n    // do not validate if val length < min threshold on first validation. Once field have been validated once and info\n    // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.\n    if (event && /key|input/.test(event.type))\n      if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold)\n        return;\n\n    if (this.options.debounce) {\n      window.clearTimeout(this._debounced);\n      this._debounced = window.setTimeout(() => this.validate(), this.options.debounce);\n    } else\n      this.validate();\n  },\n\n  _resetUI: function () {\n    // Reset all event listeners\n    this._failedOnce = false;\n    this._actualizeTriggers();\n\n    // Nothing to do if UI never initialized for this field\n    if ('undefined' === typeof this._ui)\n      return;\n\n    // Reset all errors' li\n    this._ui.$errorsWrapper\n      .removeClass('filled')\n      .children()\n      .remove();\n\n    // Reset validation class\n    this._resetClass();\n\n    // Reset validation flags and last validation result\n    this._ui.lastValidationResult = [];\n    this._ui.validationInformationVisible = false;\n  },\n\n  _destroyUI: function () {\n    this._resetUI();\n\n    if ('undefined' !== typeof this._ui)\n      this._ui.$errorsWrapper.remove();\n\n    delete this._ui;\n  },\n\n  _successClass: function () {\n    this._ui.validationInformationVisible = true;\n    this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);\n  },\n  _errorClass: function () {\n    this._ui.validationInformationVisible = true;\n    this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);\n  },\n  _resetClass: function () {\n    this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);\n  }\n};\n\nexport default UI;\n","import $ from 'jquery';\nimport Base from './base';\nimport Utils from './utils';\n\nvar Form = function (element, domOptions, options) {\n  this.__class__ = 'Form';\n\n  this.element = element;\n  this.$element = $(element);\n  this.domOptions = domOptions;\n  this.options = options;\n  this.parent = window.Parsley;\n\n  this.fields = [];\n  this.validationResult = null;\n};\n\nvar statusMapping = {pending: null, resolved: true, rejected: false};\n\nForm.prototype = {\n  onSubmitValidate: function (event) {\n    // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior\n    if (true === event.parsley)\n      return;\n\n    // If we didn't come here through a submit button, use the first one in the form\n    var submitSource = this._submitSource || this.$element.find(Utils._SubmitSelector)[0];\n    this._submitSource = null;\n    this.$element.find('.parsley-synthetic-submit-button').prop('disabled', true);\n    if (submitSource && null !== submitSource.getAttribute('formnovalidate'))\n      return;\n\n    window.Parsley._remoteCache = {};\n\n    var promise = this.whenValidate({event});\n\n    if ('resolved' === promise.state() && false !== this._trigger('submit')) {\n      // All good, let event go through. We make this distinction because browsers\n      // differ in their handling of `submit` being called from inside a submit event [#1047]\n    } else {\n      // Rejected or pending: cancel this submit\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      if ('pending' === promise.state())\n        promise.done(() => { this._submit(submitSource); });\n    }\n  },\n\n  onSubmitButton: function(event) {\n    this._submitSource = event.currentTarget;\n  },\n  // internal\n  // _submit submits the form, this time without going through the validations.\n  // Care must be taken to \"fake\" the actual submit button being clicked.\n  _submit: function (submitSource) {\n    if (false === this._trigger('submit'))\n      return;\n    // Add submit button's data\n    if (submitSource) {\n      var $synthetic = this.$element.find('.parsley-synthetic-submit-button').prop('disabled', false);\n      if (0 === $synthetic.length)\n        $synthetic = $('<input class=\"parsley-synthetic-submit-button\" type=\"hidden\">').appendTo(this.$element);\n      $synthetic.attr({\n        name: submitSource.getAttribute('name'),\n        value: submitSource.getAttribute('value')\n      });\n    }\n\n    this.$element.trigger(Object.assign($.Event('submit'), {parsley: true}));\n  },\n\n  // Performs validation on fields while triggering events.\n  // @returns `true` if all validations succeeds, `false`\n  // if a failure is immediately detected, or `null`\n  // if dependant on a promise.\n  // Consider using `whenValidate` instead.\n  validate: function (options) {\n    if (arguments.length >= 1 && !$.isPlainObject(options)) {\n      Utils.warnOnce('Calling validate on a parsley form without passing arguments as an object is deprecated.');\n      var [group, force, event] = arguments;\n      options = {group, force, event};\n    }\n    return statusMapping[ this.whenValidate(options).state() ];\n  },\n\n  whenValidate: function ({group, force, event} = {}) {\n    this.submitEvent = event;\n    if (event) {\n      this.submitEvent = Object.assign({}, event, {preventDefault: () => {\n        Utils.warnOnce(\"Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`\");\n        this.validationResult = false;\n      }});\n    }\n    this.validationResult = true;\n\n    // fire validate event to eventually modify things before every validation\n    this._trigger('validate');\n\n    // Refresh form DOM options and form's fields that could have changed\n    this._refreshFields();\n\n    var promises = this._withoutReactualizingFormOptions(() => {\n      return $.map(this.fields, field => field.whenValidate({force, group}));\n    });\n\n    return Utils.all(promises)\n      .done(  () => { this._trigger('success'); })\n      .fail(  () => {\n        this.validationResult = false;\n        this.focus();\n        this._trigger('error');\n      })\n      .always(() => { this._trigger('validated'); })\n      .pipe(...this._pipeAccordingToValidationResult());\n  },\n\n  // Iterate over refreshed fields, and stop on first failure.\n  // Returns `true` if all fields are valid, `false` if a failure is detected\n  // or `null` if the result depends on an unresolved promise.\n  // Prefer using `whenValid` instead.\n  isValid: function (options) {\n    if (arguments.length >= 1 && !$.isPlainObject(options)) {\n      Utils.warnOnce('Calling isValid on a parsley form without passing arguments as an object is deprecated.');\n      var [group, force] = arguments;\n      options = {group, force};\n    }\n    return statusMapping[ this.whenValid(options).state() ];\n  },\n\n  // Iterate over refreshed fields and validate them.\n  // Returns a promise.\n  // A validation that immediately fails will interrupt the validations.\n  whenValid: function ({group, force} = {}) {\n    this._refreshFields();\n\n    var promises = this._withoutReactualizingFormOptions(() => {\n      return $.map(this.fields, field => field.whenValid({group, force}));\n    });\n    return Utils.all(promises);\n  },\n\n  refresh: function() {\n    this._refreshFields();\n    return this;\n  },\n\n  // Reset UI\n  reset: function () {\n    // Form case: emit a reset event for each field\n    for (var i = 0; i < this.fields.length; i++)\n      this.fields[i].reset();\n\n    this._trigger('reset');\n  },\n\n  // Destroy Parsley instance (+ UI)\n  destroy: function () {\n    // Field case: emit destroy event to clean UI and then destroy stored instance\n    this._destroyUI();\n\n    // Form case: destroy all its fields and then destroy stored instance\n    for (var i = 0; i < this.fields.length; i++)\n      this.fields[i].destroy();\n\n    this.$element.removeData('Parsley');\n    this._trigger('destroy');\n  },\n\n  _refreshFields: function () {\n    return this.actualizeOptions()._bindFields();\n  },\n\n  _bindFields: function () {\n    var oldFields = this.fields;\n\n    this.fields = [];\n    this.fieldsMappedById = {};\n\n    this._withoutReactualizingFormOptions(() => {\n      this.$element\n      .find(this.options.inputs)\n      .not(this.options.excluded)\n      .not(`[${this.options.namespace}excluded=true]`)\n      .each((_, element) => {\n        var fieldInstance = new window.Parsley.Factory(element, {}, this);\n\n        // Only add valid and not excluded `Field` and `FieldMultiple` children\n        if ('Field' === fieldInstance.__class__ || 'FieldMultiple' === fieldInstance.__class__) {\n          let uniqueId = fieldInstance.__class__ + '-' + fieldInstance.__id__;\n          if ('undefined' === typeof this.fieldsMappedById[uniqueId]) {\n            this.fieldsMappedById[uniqueId] = fieldInstance;\n            this.fields.push(fieldInstance);\n          }\n        }\n      });\n\n      $.each(Utils.difference(oldFields, this.fields), (_, field) => {\n        field.reset();\n      });\n    });\n    return this;\n  },\n\n  // Internal only.\n  // Looping on a form's fields to do validation or similar\n  // will trigger reactualizing options on all of them, which\n  // in turn will reactualize the form's options.\n  // To avoid calling actualizeOptions so many times on the form\n  // for nothing, _withoutReactualizingFormOptions temporarily disables\n  // the method actualizeOptions on this form while `fn` is called.\n  _withoutReactualizingFormOptions: function (fn) {\n    var oldActualizeOptions = this.actualizeOptions;\n    this.actualizeOptions = function () { return this; };\n    var result = fn();\n    this.actualizeOptions = oldActualizeOptions;\n    return result;\n  },\n\n  // Internal only.\n  // Shortcut to trigger an event\n  // Returns true iff event is not interrupted and default not prevented.\n  _trigger: function (eventName) {\n    return this.trigger('form:' + eventName);\n  }\n\n};\n\nexport default Form;\n","import Utils from './utils';\nimport Validator from './validator';\n\nconst Constraint = function(parsleyField, name, requirements, priority, isDomConstraint) {\n  const validatorSpec = window.Parsley._validatorRegistry.validators[name];\n  const validator = new Validator(validatorSpec);\n  priority = priority || parsleyField.options[name + 'Priority'] || validator.priority;\n  isDomConstraint = (true === isDomConstraint);\n\n  Object.assign(this, {\n    validator,\n    name,\n    requirements,\n    priority,\n    isDomConstraint\n  });\n  this._parseRequirements(parsleyField.options);\n};\n\nconst capitalize = function(str) {\n  const cap = str[0].toUpperCase();\n  return cap + str.slice(1);\n};\n\nConstraint.prototype = {\n  validate: function(value, instance) {\n    return this.validator.validate(value, ...this.requirementList, instance);\n  },\n\n  _parseRequirements: function(options) {\n    this.requirementList = this.validator.parseRequirements(this.requirements,\n      key => options[this.name + capitalize(key)]\n    );\n  }\n};\n\nexport default Constraint;\n","import $ from 'jquery';\nimport Constraint from './constraint';\nimport UI from './ui';\nimport Utils from './utils';\n\nvar Field = function (field, domOptions, options, parsleyFormInstance) {\n  this.__class__ = 'Field';\n\n  this.element = field;\n  this.$element = $(field);\n\n  // Set parent if we have one\n  if ('undefined' !== typeof parsleyFormInstance) {\n    this.parent = parsleyFormInstance;\n  }\n\n  this.options = options;\n  this.domOptions = domOptions;\n\n  // Initialize some properties\n  this.constraints = [];\n  this.constraintsByName = {};\n  this.validationResult = true;\n\n  // Bind constraints\n  this._bindConstraints();\n};\n\nvar statusMapping = {pending: null, resolved: true, rejected: false};\n\nField.prototype = {\n  // # Public API\n  // Validate field and trigger some events for mainly `UI`\n  // @returns `true`, an array of the validators that failed, or\n  // `null` if validation is not finished. Prefer using whenValidate\n  validate: function (options) {\n    if (arguments.length >= 1 && !$.isPlainObject(options)) {\n      Utils.warnOnce('Calling validate on a parsley field without passing arguments as an object is deprecated.');\n      options = {options};\n    }\n    var promise = this.whenValidate(options);\n    if (!promise)  // If excluded with `group` option\n      return true;\n    switch (promise.state()) {\n      case 'pending': return null;\n      case 'resolved': return true;\n      case 'rejected': return this.validationResult;\n    }\n  },\n\n  // Validate field and trigger some events for mainly `UI`\n  // @returns a promise that succeeds only when all validations do\n  // or `undefined` if field is not in the given `group`.\n  whenValidate: function ({force, group} =  {}) {\n    // do not validate a field if not the same as given validation group\n    this.refresh();\n    if (group && !this._isInGroup(group))\n      return;\n\n    this.value = this.getValue();\n\n    // Field Validate event. `this.value` could be altered for custom needs\n    this._trigger('validate');\n\n    return this.whenValid({force, value: this.value, _refreshed: true})\n      .always(() => { this._reflowUI(); })\n      .done(() =>   { this._trigger('success'); })\n      .fail(() =>   { this._trigger('error'); })\n      .always(() => { this._trigger('validated'); })\n      .pipe(...this._pipeAccordingToValidationResult());\n  },\n\n  hasConstraints: function () {\n    return 0 !== this.constraints.length;\n  },\n\n  // An empty optional field does not need validation\n  needsValidation: function (value) {\n    if ('undefined' === typeof value)\n      value = this.getValue();\n\n    // If a field is empty and not required, it is valid\n    // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators\n    if (!value.length && !this._isRequired() && 'undefined' === typeof this.options.validateIfEmpty)\n      return false;\n\n    return true;\n  },\n\n  _isInGroup: function (group) {\n    if (Array.isArray(this.options.group))\n      return -1 !== $.inArray(group, this.options.group);\n    return this.options.group === group;\n  },\n\n  // Just validate field. Do not trigger any event.\n  // Returns `true` iff all constraints pass, `false` if there are failures,\n  // or `null` if the result can not be determined yet (depends on a promise)\n  // See also `whenValid`.\n  isValid: function (options) {\n    if (arguments.length >= 1 && !$.isPlainObject(options)) {\n      Utils.warnOnce('Calling isValid on a parsley field without passing arguments as an object is deprecated.');\n      var [force, value] = arguments;\n      options = {force, value};\n    }\n    var promise = this.whenValid(options);\n    if (!promise) // Excluded via `group`\n      return true;\n    return statusMapping[promise.state()];\n  },\n\n  // Just validate field. Do not trigger any event.\n  // @returns a promise that succeeds only when all validations do\n  // or `undefined` if the field is not in the given `group`.\n  // The argument `force` will force validation of empty fields.\n  // If a `value` is given, it will be validated instead of the value of the input.\n  whenValid: function ({force = false, value, group, _refreshed} = {}) {\n    // Recompute options and rebind constraints to have latest changes\n    if (!_refreshed)\n      this.refresh();\n    // do not validate a field if not the same as given validation group\n    if (group && !this._isInGroup(group))\n      return;\n\n    this.validationResult = true;\n\n    // A field without constraint is valid\n    if (!this.hasConstraints())\n      return $.when();\n\n    // Value could be passed as argument, needed to add more power to 'field:validate'\n    if ('undefined' === typeof value || null === value)\n      value = this.getValue();\n\n    if (!this.needsValidation(value) && true !== force)\n      return $.when();\n\n    var groupedConstraints = this._getGroupedConstraints();\n    var promises = [];\n    $.each(groupedConstraints, (_, constraints) => {\n      // Process one group of constraints at a time, we validate the constraints\n      // and combine the promises together.\n      var promise = Utils.all(\n        $.map(constraints, constraint => this._validateConstraint(value, constraint))\n      );\n      promises.push(promise);\n      if (promise.state() === 'rejected')\n        return false; // Interrupt processing if a group has already failed\n    });\n    return Utils.all(promises);\n  },\n\n  // @returns a promise\n  _validateConstraint: function(value, constraint) {\n    var result = constraint.validate(value, this);\n    // Map false to a failed promise\n    if (false === result)\n      result = $.Deferred().reject();\n    // Make sure we return a promise and that we record failures\n    return Utils.all([result]).fail(errorMessage => {\n      if (!(this.validationResult instanceof Array))\n        this.validationResult = [];\n      this.validationResult.push({\n        assert: constraint,\n        errorMessage: 'string' === typeof errorMessage && errorMessage\n      });\n    });\n  },\n\n  // @returns Parsley field computed value that could be overrided or configured in DOM\n  getValue: function () {\n    var value;\n\n    // Value could be overriden in DOM or with explicit options\n    if ('function' === typeof this.options.value)\n      value = this.options.value(this);\n    else if ('undefined' !== typeof this.options.value)\n      value = this.options.value;\n    else\n      value = this.$element.val();\n\n    // Handle wrong DOM or configurations\n    if ('undefined' === typeof value || null === value)\n      return '';\n\n    return this._handleWhitespace(value);\n  },\n\n  // Reset UI\n  reset: function () {\n    this._resetUI();\n    return this._trigger('reset');\n  },\n\n  // Destroy Parsley instance (+ UI)\n  destroy: function () {\n    // Field case: emit destroy event to clean UI and then destroy stored instance\n    this._destroyUI();\n    this.$element.removeData('Parsley');\n    this.$element.removeData('FieldMultiple');\n    this._trigger('destroy');\n  },\n\n  // Actualize options and rebind constraints\n  refresh: function () {\n    this._refreshConstraints();\n    return this;\n  },\n\n  _refreshConstraints: function () {\n    return this.actualizeOptions()._bindConstraints();\n  },\n\n  refreshConstraints: function() {\n    Utils.warnOnce(\"Parsley's refreshConstraints is deprecated. Please use refresh\");\n    return this.refresh();\n  },\n\n  /**\n  * Add a new constraint to a field\n  *\n  * @param {String}   name\n  * @param {Mixed}    requirements      optional\n  * @param {Number}   priority          optional\n  * @param {Boolean}  isDomConstraint   optional\n  */\n  addConstraint: function (name, requirements, priority, isDomConstraint) {\n\n    if (window.Parsley._validatorRegistry.validators[name]) {\n      var constraint = new Constraint(this, name, requirements, priority, isDomConstraint);\n\n      // if constraint already exist, delete it and push new version\n      if ('undefined' !== this.constraintsByName[constraint.name])\n        this.removeConstraint(constraint.name);\n\n      this.constraints.push(constraint);\n      this.constraintsByName[constraint.name] = constraint;\n    }\n\n    return this;\n  },\n\n  // Remove a constraint\n  removeConstraint: function (name) {\n    for (var i = 0; i < this.constraints.length; i++)\n      if (name === this.constraints[i].name) {\n        this.constraints.splice(i, 1);\n        break;\n      }\n    delete this.constraintsByName[name];\n    return this;\n  },\n\n  // Update a constraint (Remove + re-add)\n  updateConstraint: function (name, parameters, priority) {\n    return this.removeConstraint(name)\n      .addConstraint(name, parameters, priority);\n  },\n\n  // # Internals\n\n  // Internal only.\n  // Bind constraints from config + options + DOM\n  _bindConstraints: function () {\n    var constraints = [];\n    var constraintsByName = {};\n\n    // clean all existing DOM constraints to only keep javascript user constraints\n    for (var i = 0; i < this.constraints.length; i++)\n      if (false === this.constraints[i].isDomConstraint) {\n        constraints.push(this.constraints[i]);\n        constraintsByName[this.constraints[i].name] = this.constraints[i];\n      }\n\n    this.constraints = constraints;\n    this.constraintsByName = constraintsByName;\n\n    // then re-add Parsley DOM-API constraints\n    for (var name in this.options)\n      this.addConstraint(name, this.options[name], undefined, true);\n\n    // finally, bind special HTML5 constraints\n    return this._bindHtml5Constraints();\n  },\n\n  // Internal only.\n  // Bind specific HTML5 constraints to be HTML5 compliant\n  _bindHtml5Constraints: function () {\n    // html5 required\n    if (null !== this.element.getAttribute('required'))\n      this.addConstraint('required', true, undefined, true);\n\n    // html5 pattern\n    if (null !== this.element.getAttribute('pattern'))\n      this.addConstraint('pattern', this.element.getAttribute('pattern'), undefined, true);\n\n    // range\n    let min = this.element.getAttribute('min');\n    let max = this.element.getAttribute('max');\n    if (null !== min && null !== max)\n      this.addConstraint('range', [min, max], undefined, true);\n\n    // HTML5 min\n    else if (null !== min)\n      this.addConstraint('min', min, undefined, true);\n\n    // HTML5 max\n    else if (null !== max)\n      this.addConstraint('max', max, undefined, true);\n\n\n    // length\n    if (null !== this.element.getAttribute('minlength') && null !== this.element.getAttribute('maxlength'))\n      this.addConstraint('length', [this.element.getAttribute('minlength'), this.element.getAttribute('maxlength')], undefined, true);\n\n    // HTML5 minlength\n    else if (null !== this.element.getAttribute('minlength'))\n      this.addConstraint('minlength', this.element.getAttribute('minlength'), undefined, true);\n\n    // HTML5 maxlength\n    else if (null !== this.element.getAttribute('maxlength'))\n      this.addConstraint('maxlength', this.element.getAttribute('maxlength'), undefined, true);\n\n\n    // html5 types\n    var type = Utils.getType(this.element);\n\n    // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise\n    if ('number' === type) {\n      return this.addConstraint('type', ['number', {\n        step: this.element.getAttribute('step') || '1',\n        base: min || this.element.getAttribute('value')\n      }], undefined, true);\n    // Regular other HTML5 supported types\n    } else if (/^(email|url|range|date)$/i.test(type)) {\n      return this.addConstraint('type', type, undefined, true);\n    }\n    return this;\n  },\n\n  // Internal only.\n  // Field is required if have required constraint without `false` value\n  _isRequired: function () {\n    if ('undefined' === typeof this.constraintsByName.required)\n      return false;\n\n    return false !== this.constraintsByName.required.requirements;\n  },\n\n  // Internal only.\n  // Shortcut to trigger an event\n  _trigger: function (eventName) {\n    return this.trigger('field:' + eventName);\n  },\n\n  // Internal only\n  // Handles whitespace in a value\n  // Use `data-parsley-whitespace=\"squish\"` to auto squish input value\n  // Use `data-parsley-whitespace=\"trim\"` to auto trim input value\n  _handleWhitespace: function (value) {\n    if (true === this.options.trimValue)\n      Utils.warnOnce('data-parsley-trim-value=\"true\" is deprecated, please use data-parsley-whitespace=\"trim\"');\n\n    if ('squish' === this.options.whitespace)\n      value = value.replace(/\\s{2,}/g, ' ');\n\n    if (('trim' === this.options.whitespace) || ('squish' === this.options.whitespace) || (true === this.options.trimValue))\n      value = Utils.trimString(value);\n\n    return value;\n  },\n\n  _isDateInput: function() {\n    var c = this.constraintsByName.type;\n    return c && c.requirements === 'date';\n  },\n\n  // Internal only.\n  // Returns the constraints, grouped by descending priority.\n  // The result is thus an array of arrays of constraints.\n  _getGroupedConstraints: function () {\n    if (false === this.options.priorityEnabled)\n      return [this.constraints];\n\n    var groupedConstraints = [];\n    var index = {};\n\n    // Create array unique of priorities\n    for (var i = 0; i < this.constraints.length; i++) {\n      var p = this.constraints[i].priority;\n      if (!index[p])\n        groupedConstraints.push(index[p] = []);\n      index[p].push(this.constraints[i]);\n    }\n    // Sort them by priority DESC\n    groupedConstraints.sort(function (a, b) { return b[0].priority - a[0].priority; });\n\n    return groupedConstraints;\n  }\n\n};\n\nexport default Field;\n","import $ from 'jquery';\nimport Utils from './utils';\n\nvar Multiple = function () {\n  this.__class__ = 'FieldMultiple';\n};\n\nMultiple.prototype = {\n  // Add new `$element` sibling for multiple field\n  addElement: function ($element) {\n    this.$elements.push($element);\n\n    return this;\n  },\n\n  // See `Field._refreshConstraints()`\n  _refreshConstraints: function () {\n    var fieldConstraints;\n\n    this.constraints = [];\n\n    // Select multiple special treatment\n    if (this.element.nodeName === 'SELECT') {\n      this.actualizeOptions()._bindConstraints();\n\n      return this;\n    }\n\n    // Gather all constraints for each input in the multiple group\n    for (var i = 0; i < this.$elements.length; i++) {\n\n      // Check if element have not been dynamically removed since last binding\n      if (!$('html').has(this.$elements[i]).length) {\n        this.$elements.splice(i, 1);\n        continue;\n      }\n\n      fieldConstraints = this.$elements[i].data('FieldMultiple')._refreshConstraints().constraints;\n\n      for (var j = 0; j < fieldConstraints.length; j++)\n        this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);\n    }\n\n    return this;\n  },\n\n  // See `Field.getValue()`\n  getValue: function () {\n    // Value could be overriden in DOM\n    if ('function' === typeof this.options.value)\n      return this.options.value(this);\n    else if ('undefined' !== typeof this.options.value)\n      return this.options.value;\n\n    // Radio input case\n    if (this.element.nodeName === 'INPUT') {\n      var type = Utils.getType(this.element);\n      if (type === 'radio')\n        return this._findRelated().filter(':checked').val() || '';\n\n      // checkbox input case\n      if (type === 'checkbox') {\n        var values = [];\n\n        this._findRelated().filter(':checked').each(function () {\n          values.push($(this).val());\n        });\n\n        return values;\n      }\n    }\n\n    // Select multiple case\n    if (this.element.nodeName === 'SELECT' && null === this.$element.val())\n      return [];\n\n    // Default case that should never happen\n    return this.$element.val();\n  },\n\n  _init: function () {\n    this.$elements = [this.$element];\n\n    return this;\n  }\n};\n\nexport default Multiple;\n","import $ from 'jquery';\nimport Utils from './utils';\nimport Base from './base';\nimport Form from './form';\nimport Field from './field';\nimport Multiple from './multiple';\n\nvar Factory = function (element, options, parsleyFormInstance) {\n  this.element = element;\n  this.$element = $(element);\n\n  // If the element has already been bound, returns its saved Parsley instance\n  var savedparsleyFormInstance = this.$element.data('Parsley');\n  if (savedparsleyFormInstance) {\n\n    // If the saved instance has been bound without a Form parent and there is one given in this call, add it\n    if ('undefined' !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {\n      savedparsleyFormInstance.parent = parsleyFormInstance;\n      savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);\n    }\n\n    if ('object' === typeof options) {\n      Object.assign(savedparsleyFormInstance.options, options);\n    }\n\n    return savedparsleyFormInstance;\n  }\n\n  // Parsley must be instantiated with a DOM element or jQuery $element\n  if (!this.$element.length)\n    throw new Error('You must bind Parsley on an existing element.');\n\n  if ('undefined' !== typeof parsleyFormInstance && 'Form' !== parsleyFormInstance.__class__)\n    throw new Error('Parent instance must be a Form instance');\n\n  this.parent = parsleyFormInstance || window.Parsley;\n  return this.init(options);\n};\n\nFactory.prototype = {\n  init: function (options) {\n    this.__class__ = 'Parsley';\n    this.__version__ = 'VERSION';\n    this.__id__ = Utils.generateID();\n\n    // Pre-compute options\n    this._resetOptions(options);\n\n    // A Form instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute\n    if (this.element.nodeName === 'FORM' || (Utils.checkAttr(this.element, this.options.namespace, 'validate') && !this.$element.is(this.options.inputs)))\n      return this.bind('parsleyForm');\n\n    // Every other element is bound as a `Field` or `FieldMultiple`\n    return this.isMultiple() ? this.handleMultiple() : this.bind('parsleyField');\n  },\n\n  isMultiple: function () {\n    var type = Utils.getType(this.element);\n    return ((type === 'radio' || type === 'checkbox') ||\n      (this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple')));\n  },\n\n  // Multiples fields are a real nightmare :(\n  // Maybe some refactoring would be appreciated here...\n  handleMultiple: function () {\n    var name;\n    var multiple;\n    var parsleyMultipleInstance;\n\n    // Handle multiple name\n    this.options.multiple = this.options.multiple ||\n      (name = this.element.getAttribute('name')) ||\n      this.element.getAttribute('id');\n\n    // Special select multiple input\n    if (this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple')) {\n      this.options.multiple = this.options.multiple || this.__id__;\n      return this.bind('parsleyFieldMultiple');\n\n    // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it\n    } else if (!this.options.multiple) {\n      Utils.warn('To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.', this.$element);\n      return this;\n    }\n\n    // Remove special chars\n    this.options.multiple = this.options.multiple.replace(/(:|\\.|\\[|\\]|\\{|\\}|\\$)/g, '');\n\n    // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name\n    if (name) {\n      $('input[name=\"' + name + '\"]').each((i, input) => {\n        var type = Utils.getType(input);\n        if ((type === 'radio' || type === 'checkbox'))\n          input.setAttribute(this.options.namespace + 'multiple', this.options.multiple);\n      });\n    }\n\n    // Check here if we don't already have a related multiple instance saved\n    var $previouslyRelated = this._findRelated();\n    for (var i = 0; i < $previouslyRelated.length; i++) {\n      parsleyMultipleInstance = $($previouslyRelated.get(i)).data('Parsley');\n      if ('undefined' !== typeof parsleyMultipleInstance) {\n\n        if (!this.$element.data('FieldMultiple')) {\n          parsleyMultipleInstance.addElement(this.$element);\n        }\n\n        break;\n      }\n    }\n\n    // Create a secret Field instance for every multiple field. It will be stored in `data('FieldMultiple')`\n    // And will be useful later to access classic `Field` stuff while being in a `FieldMultiple` instance\n    this.bind('parsleyField', true);\n\n    return parsleyMultipleInstance || this.bind('parsleyFieldMultiple');\n  },\n\n  // Return proper `Form`, `Field` or `FieldMultiple`\n  bind: function (type, doNotStore) {\n    var parsleyInstance;\n\n    switch (type) {\n      case 'parsleyForm':\n        parsleyInstance = $.extend(\n          new Form(this.element, this.domOptions, this.options),\n          new Base(),\n          window.ParsleyExtend\n        )._bindFields();\n        break;\n      case 'parsleyField':\n        parsleyInstance = $.extend(\n          new Field(this.element, this.domOptions, this.options, this.parent),\n          new Base(),\n          window.ParsleyExtend\n        );\n        break;\n      case 'parsleyFieldMultiple':\n        parsleyInstance = $.extend(\n          new Field(this.element, this.domOptions, this.options, this.parent),\n          new Multiple(),\n          new Base(),\n          window.ParsleyExtend\n        )._init();\n        break;\n      default:\n        throw new Error(type + 'is not a supported Parsley type');\n    }\n\n    if (this.options.multiple)\n      Utils.setAttr(this.element, this.options.namespace, 'multiple', this.options.multiple);\n\n    if ('undefined' !== typeof doNotStore) {\n      this.$element.data('FieldMultiple', parsleyInstance);\n\n      return parsleyInstance;\n    }\n\n    // Store the freshly bound instance in a DOM element for later access using jQuery `data()`\n    this.$element.data('Parsley', parsleyInstance);\n\n    // Tell the world we have a new Form or Field instance!\n    parsleyInstance._actualizeTriggers();\n    parsleyInstance._trigger('init');\n\n    return parsleyInstance;\n  }\n};\n\nexport default Factory;\n","import $ from 'jquery';\nimport Utils from './utils';\nimport Defaults from './defaults';\nimport Base from './base';\nimport ValidatorRegistry from './validator_registry';\nimport UI from './ui';\nimport Form from './form';\nimport Field from './field';\nimport Multiple from './multiple';\nimport Factory from './factory';\n\nvar vernums = $.fn.jquery.split('.');\nif (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) {\n  throw \"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.\";\n}\nif (!vernums.forEach) {\n  Utils.warn('Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim');\n}\n// Inherit `on`, `off` & `trigger` to Parsley:\nvar Parsley = Object.assign(new Base(), {\n    element: document,\n    $element: $(document),\n    actualizeOptions: null,\n    _resetOptions: null,\n    Factory: Factory,\n    version: 'VERSION'\n  });\n\n// Supplement Field and Form with Base\n// This way, the constructors will have access to those methods\nObject.assign(Field.prototype, UI.Field, Base.prototype);\nObject.assign(Form.prototype, UI.Form, Base.prototype);\n// Inherit actualizeOptions and _resetOptions:\nObject.assign(Factory.prototype, Base.prototype);\n\n// ### jQuery API\n// `$('.elem').parsley(options)` or `$('.elem').psly(options)`\n$.fn.parsley = $.fn.psly = function (options) {\n  if (this.length > 1) {\n    var instances = [];\n\n    this.each(function () {\n      instances.push($(this).parsley(options));\n    });\n\n    return instances;\n  }\n\n  // Return undefined if applied to non existing DOM element\n  if (this.length == 0) {\n    return;\n  }\n\n  return new Factory(this[0], options);\n};\n\n// ### Field and Form extension\n// Ensure the extension is now defined if it wasn't previously\nif ('undefined' === typeof window.ParsleyExtend)\n  window.ParsleyExtend = {};\n\n// ### Parsley config\n// Inherit from ParsleyDefault, and copy over any existing values\nParsley.options = Object.assign(Utils.objectCreate(Defaults), window.ParsleyConfig);\nwindow.ParsleyConfig = Parsley.options; // Old way of accessing global options\n\n// ### Globals\nwindow.Parsley = window.psly = Parsley;\nParsley.Utils = Utils;\nwindow.ParsleyUtils = {};\n$.each(Utils, (key, value) => {\n  if ('function' === typeof value) {\n    window.ParsleyUtils[key] = (...args) => {\n      Utils.warnOnce('Accessing `window.ParsleyUtils` is deprecated. Use `window.Parsley.Utils` instead.');\n      return Utils[key](...args);\n    };\n  }\n});\n\n// ### Define methods that forward to the registry, and deprecate all access except through window.Parsley\nvar registry = window.Parsley._validatorRegistry = new ValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);\nwindow.ParsleyValidator = {};\n$.each('setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator hasValidator'.split(' '), function (i, method) {\n  window.Parsley[method] = (...args) => registry[method](...args);\n  window.ParsleyValidator[method] = function () {\n    Utils.warnOnce(`Accessing the method '${method}' through Validator is deprecated. Simply call 'window.Parsley.${method}(...)'`);\n    return window.Parsley[method](...arguments);\n  };\n});\n\n// ### UI\n// Deprecated global object\nwindow.Parsley.UI = UI;\nwindow.ParsleyUI = {\n  removeError: function (instance, name, doNotUpdateClass) {\n    var updateClass = true !== doNotUpdateClass;\n    Utils.warnOnce(`Accessing UI is deprecated. Call 'removeError' on the instance directly. Please comment in issue 1073 as to your need to call this method.`);\n    return instance.removeError(name, {updateClass});\n  },\n  getErrorsMessages: function (instance) {\n    Utils.warnOnce(`Accessing UI is deprecated. Call 'getErrorsMessages' on the instance directly.`);\n    return instance.getErrorsMessages();\n  }\n};\n$.each('addError updateError'.split(' '), function (i, method) {\n  window.ParsleyUI[method] = function (instance, name, message, assert, doNotUpdateClass) {\n    var updateClass = true !== doNotUpdateClass;\n    Utils.warnOnce(`Accessing UI is deprecated. Call '${method}' on the instance directly. Please comment in issue 1073 as to your need to call this method.`);\n    return instance[method](name, {message, assert, updateClass});\n  };\n});\n\n// ### PARSLEY auto-binding\n// Prevent it by setting `ParsleyConfig.autoBind` to `false`\nif (false !== window.ParsleyConfig.autoBind) {\n  $(function () {\n    // Works only on `data-parsley-validate`.\n    if ($('[data-parsley-validate]').length)\n      $('[data-parsley-validate]').parsley();\n  });\n}\n\nexport default Parsley;\n","import $ from 'jquery';\nimport Field from './field';\nimport Form from './form';\nimport Utils from './utils';\n\nvar o = $({});\nvar deprecated = function () {\n  Utils.warnOnce(\"Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley\");\n};\n\n// Returns an event handler that calls `fn` with the arguments it expects\nfunction adapt(fn, context) {\n  // Store to allow unbinding\n  if (!fn.parsleyAdaptedCallback) {\n    fn.parsleyAdaptedCallback = function () {\n      var args = Array.prototype.slice.call(arguments, 0);\n      args.unshift(this);\n      fn.apply(context || o, args);\n    };\n  }\n  return fn.parsleyAdaptedCallback;\n}\n\nvar eventPrefix = 'parsley:';\n// Converts 'parsley:form:validate' into 'form:validate'\nfunction eventName(name) {\n  if (name.lastIndexOf(eventPrefix, 0) === 0)\n    return name.substr(eventPrefix.length);\n  return name;\n}\n\n// $.listen is deprecated. Use Parsley.on instead.\n$.listen = function (name, callback) {\n  var context;\n  deprecated();\n  if ('object' === typeof arguments[1] && 'function' === typeof arguments[2]) {\n    context = arguments[1];\n    callback = arguments[2];\n  }\n\n  if ('function' !== typeof callback)\n    throw new Error('Wrong parameters');\n\n  window.Parsley.on(eventName(name), adapt(callback, context));\n};\n\n$.listenTo = function (instance, name, fn) {\n  deprecated();\n  if (!(instance instanceof Field) && !(instance instanceof Form))\n    throw new Error('Must give Parsley instance');\n\n  if ('string' !== typeof name || 'function' !== typeof fn)\n    throw new Error('Wrong parameters');\n\n  instance.on(eventName(name), adapt(fn));\n};\n\n$.unsubscribe = function (name, fn) {\n  deprecated();\n  if ('string' !== typeof name || 'function' !== typeof fn)\n    throw new Error('Wrong arguments');\n  window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);\n};\n\n$.unsubscribeTo = function (instance, name) {\n  deprecated();\n  if (!(instance instanceof Field) && !(instance instanceof Form))\n    throw new Error('Must give Parsley instance');\n  instance.off(eventName(name));\n};\n\n$.unsubscribeAll = function (name) {\n  deprecated();\n  window.Parsley.off(eventName(name));\n  $('form,input,textarea,select').each(function () {\n    var instance = $(this).data('Parsley');\n    if (instance) {\n      instance.off(eventName(name));\n    }\n  });\n};\n\n// $.emit is deprecated. Use jQuery events instead.\n$.emit = function (name, instance) {\n  deprecated();\n  var instanceGiven = (instance instanceof Field) || (instance instanceof Form);\n  var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);\n  args.unshift(eventName(name));\n  if (!instanceGiven) {\n    instance = window.Parsley;\n  }\n  instance.trigger(...args);\n};\n\nexport default {};\n","import $ from 'jquery';\nimport Utils from './utils';\nimport Base from './base';\n\nimport Parsley from './main';\n\n$.extend(true, Parsley, {\n  asyncValidators: {\n    'default': {\n      fn: function (xhr) {\n        // By default, only status 2xx are deemed successful.\n        // Note: we use status instead of state() because responses with status 200\n        // but invalid messages (e.g. an empty body for content type set to JSON) will\n        // result in state() === 'rejected'.\n        return xhr.status >= 200 && xhr.status < 300;\n      },\n      url: false\n    },\n    reverse: {\n      fn: function (xhr) {\n        // If reverse option is set, a failing ajax request is considered successful\n        return xhr.status < 200 || xhr.status >= 300;\n      },\n      url: false\n    }\n  },\n\n  addAsyncValidator: function (name, fn, url, options) {\n    Parsley.asyncValidators[name] = {\n      fn: fn,\n      url: url || false,\n      options: options || {}\n    };\n\n    return this;\n  }\n\n});\n\nParsley.addValidator('remote', {\n  requirementType: {\n    '': 'string',\n    'validator': 'string',\n    'reverse': 'boolean',\n    'options': 'object'\n  },\n\n  validateString: function (value, url, options, instance) {\n    var data = {};\n    var ajaxOptions;\n    var csr;\n    var validator = options.validator || (true === options.reverse ? 'reverse' : 'default');\n\n    if ('undefined' === typeof Parsley.asyncValidators[validator])\n      throw new Error('Calling an undefined async validator: `' + validator + '`');\n\n    url = Parsley.asyncValidators[validator].url || url;\n\n    // Fill current value\n    if (url.indexOf('{value}') > -1) {\n      url = url.replace('{value}', encodeURIComponent(value));\n    } else {\n      data[instance.element.getAttribute('name') || instance.element.getAttribute('id')] = value;\n    }\n\n    // Merge options passed in from the function with the ones in the attribute\n    var remoteOptions = $.extend(true, options.options || {} , Parsley.asyncValidators[validator].options);\n\n    // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`\n    ajaxOptions = $.extend(true, {}, {\n      url: url,\n      data: data,\n      type: 'GET'\n    }, remoteOptions);\n\n    // Generate store key based on ajax options\n    instance.trigger('field:ajaxoptions', instance, ajaxOptions);\n\n    csr = $.param(ajaxOptions);\n\n    // Initialise querry cache\n    if ('undefined' === typeof Parsley._remoteCache)\n      Parsley._remoteCache = {};\n\n    // Try to retrieve stored xhr\n    var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);\n\n    var handleXhr = function () {\n      var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);\n      if (!result) // Map falsy results to rejected promise\n        result = $.Deferred().reject();\n      return $.when(result);\n    };\n\n    return xhr.then(handleXhr, handleXhr);\n  },\n\n  priority: -1\n});\n\nParsley.on('form:submit', function () {\n  Parsley._remoteCache = {};\n});\n\nBase.prototype.addAsyncValidator = function () {\n  Utils.warnOnce('Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`');\n  return Parsley.addAsyncValidator(...arguments);\n};\n","// This is included with the Parsley library itself,\n// thus there is no use in adding it to your project.\nimport Parsley from '../parsley/main';\n\nParsley.addMessages('en', {\n  defaultMessage: \"This value seems to be invalid.\",\n  type: {\n    email:        \"This value should be a valid email.\",\n    url:          \"This value should be a valid url.\",\n    number:       \"This value should be a valid number.\",\n    integer:      \"This value should be a valid integer.\",\n    digits:       \"This value should be digits.\",\n    alphanum:     \"This value should be alphanumeric.\"\n  },\n  notblank:       \"This value should not be blank.\",\n  required:       \"This value is required.\",\n  pattern:        \"This value seems to be invalid.\",\n  min:            \"This value should be greater than or equal to %s.\",\n  max:            \"This value should be lower than or equal to %s.\",\n  range:          \"This value should be between %s and %s.\",\n  minlength:      \"This value is too short. It should have %s characters or more.\",\n  maxlength:      \"This value is too long. It should have %s characters or fewer.\",\n  length:         \"This value length is invalid. It should be between %s and %s characters long.\",\n  mincheck:       \"You must select at least %s choices.\",\n  maxcheck:       \"You must select %s choices or fewer.\",\n  check:          \"You must select between %s and %s choices.\",\n  equalto:        \"This value should be the same.\",\n  euvatin:        \"It's not a valid VAT Identification Number.\",\n});\n\nParsley.setLocale('en');\n","/**\n * inputevent - Alleviate browser bugs for input events\n * https://github.com/marcandre/inputevent\n * @version v0.0.3 - (built Thu, Apr 14th 2016, 5:58 pm)\n * @author Marc-Andre Lafortune <github@marc-andre.ca>\n * @license MIT\n */\n\nimport $ from 'jquery';\n\nfunction InputEvent() {\n  let globals = window || global;\n\n  // Slightly odd way construct our object. This way methods are force bound.\n  // Used to test for duplicate library.\n  Object.assign(this, {\n\n    // For browsers that do not support isTrusted, assumes event is native.\n    isNativeEvent: evt => {\n      return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n    },\n\n    fakeInputEvent: evt => {\n      if (this.isNativeEvent(evt)) {\n        $(evt.target).trigger('input');\n      }\n    },\n\n    misbehaves: evt => {\n      if (this.isNativeEvent(evt)) {\n        this.behavesOk(evt);\n        $(document)\n          .on('change.inputevent', evt.data.selector, this.fakeInputEvent);\n        this.fakeInputEvent(evt);\n      }\n    },\n\n    behavesOk: evt => {\n      if (this.isNativeEvent(evt)) {\n        $(document) // Simply unbinds the testing handler\n          .off('input.inputevent', evt.data.selector, this.behavesOk)\n          .off('change.inputevent', evt.data.selector, this.misbehaves);\n      }\n    },\n\n    // Bind the testing handlers\n    install: () => {\n      if (globals.inputEventPatched) {\n        return;\n      }\n      globals.inputEventPatched = '0.0.3';\n      for (let selector of ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]']) {\n        $(document)\n          .on('input.inputevent', selector, {selector}, this.behavesOk)\n          .on('change.inputevent', selector, {selector}, this.misbehaves);\n      }\n    },\n\n    uninstall: () => {\n      delete globals.inputEventPatched;\n      $(document).off('.inputevent');\n    }\n\n  });\n};\n\nexport default new InputEvent();\n","import $ from 'jquery';\nimport Parsley from './parsley/main';\nimport './parsley/pubsub';\nimport './parsley/remote';\nimport './i18n/en';\nimport inputevent from './vendor/inputevent';\n\ninputevent.install();\n\nexport default Parsley;\n"],"names":["globalID","pastWarnings","Utils","attr","element","namespace","obj","i","attribute","attributes","regex","RegExp","hasOwnProperty","length","specified","test","name","this","camelize","slice","deserializeValue","value","checkAttr","hasAttribute","setAttr","setAttribute","dasherize","String","getType","getAttribute","generateID","num","isNaN","Number","JSON","parse","e","str","replace","match","chr","toUpperCase","toLowerCase","warn","window","console","arguments","warnOnce","msg","_resetWarnings","trimString","string","date","parsed","map","x","parseInt","year","month","day","Date","getFullYear","getMonth","getDate","integer","number","parseFloat","object","regexp","flags","parseRequirement","requirementType","converter","converted","namespaceEvents","events","split","$","evt","join","difference","array","remove","result","each","_","elem","indexOf","push","all","promises","when","objectCreate","Object","create","prototype","Error","_typeof","TypeError","_SubmitSelector","Base","__id__","Defaults","inputs","excluded","priorityEnabled","multiple","group","uiEnabled","validationThreshold","focus","trigger","triggerAfterFailure","errorClass","successClass","classHandler","Field","errorsContainer","errorsWrapper","errorTemplate","asyncSupport","_pipeAccordingToValidationResult","pipe","r","Deferred","_this","validationResult","reject","resolve","promise","actualizeOptions","options","domOptions","parent","_resetOptions","initOptions","_listeners","on","fn","subscribe","listenTo","off","queue","splice","unsubscribe","unsubscribeTo","target","extraArg","call","asyncIsValid","force","whenValid","_findRelated","querySelectorAll","$element","Validator","spec","extend","validate","requirementFirstArg","Array","isArray","validateMultiple","args","instance","validateDate","_isDateInput","validateNumber","validateString","parseRequirements","requirements","extraOptionReader","type","values","m","convertArrayRequirement","isPlainObject","requirementSpec","main","extra","key","convertExtraOptionRequirement","priority","ValidatorRegistry","validators","catalog","__class__","locale","init","typeTesters","email","digits","alphanum","url","range","decimalPlaces","Math","max","operatorToValidator","operator","requirementsAndInput","pop","parseArguments","comparisonOperator","_extends","addValidator","Parsley","setLocale","addCatalog","messages","set","addMessage","message","addMessages","nameMessageObject","arg1","arg2","_setValidator","hasValidator","updateValidator","removeValidator","validator","getErrorMessage","constraint","formatMessage","defaultMessage","en","parameters","notblank","required","step","base","tester","nb","decimals","toInt","f","round","pow","pattern","minlength","requirement","maxlength","min","mincheck","maxcheck","check","equalto","refOrValue","$reference","val","euvatin","UI","Form","_actualizeTriggers","onSubmitValidate","onSubmitButton","_focusedField","fields","field","noFocus","_destroyUI","_reflowUI","_buildUI","_ui","diff","diffResults","newResult","oldResult","deep","added","kept","found","j","assert","removed","lastValidationResult","_manageStatusClass","_manageErrorsMessages","_failedOnce","getErrorsMessages","errorMessage","_getErrorMessage","addError","updateClass","_addError","_errorClass","updateError","_updateError","removeError","_removeError","hasConstraints","needsValidation","_successClass","_resetClass","errorsMessagesDisabled","_insertErrorWrapper","$errorsWrapper","find","append","addClass","html","removeClass","$errorClassHandler","errorsWrapperId","removeAttr","customConstraintErrorMessage","_manageClassHandler","validationInformationVisible","$handlerFunction","$handler","jQuery","_inputHolder","nodeName","$errorsContainer","after","$toBind","_this2","_validateIfNeeded","event","getValue","debounce","clearTimeout","_debounced","setTimeout","_this3","_resetUI","children","statusMapping","pending","resolved","rejected","parsley","submitSource","_submitSource","prop","_remoteCache","whenValidate","state","_trigger","stopImmediatePropagation","preventDefault","done","_submit","currentTarget","$synthetic","appendTo","Event","submitEvent","_refreshFields","_withoutReactualizingFormOptions","fail","always","isValid","refresh","reset","destroy","removeData","_bindFields","oldFields","fieldsMappedById","_this4","not","fieldInstance","Factory","uniqueId","oldActualizeOptions","eventName","Constraint","parsleyField","isDomConstraint","validatorSpec","_validatorRegistry","_parseRequirements","parsleyFormInstance","constraints","constraintsByName","_bindConstraints","requirementList","capitalize","_isInGroup","_refreshed","_isRequired","validateIfEmpty","inArray","groupedConstraints","_getGroupedConstraints","_validateConstraint","_handleWhitespace","_refreshConstraints","refreshConstraints","addConstraint","removeConstraint","updateConstraint","undefined","_bindHtml5Constraints","trimValue","whitespace","c","index","p","sort","a","b","Multiple","addElement","$elements","fieldConstraints","has","data","filter","_init","savedparsleyFormInstance","__version__","is","bind","isMultiple","handleMultiple","parsleyMultipleInstance","input","$previouslyRelated","get","doNotStore","parsleyInstance","ParsleyExtend","vernums","jquery","forEach","document","version","psly","instances","ParsleyConfig","ParsleyUtils","registry","i18n","ParsleyValidator","method","ParsleyUI","doNotUpdateClass","autoBind","deprecated","o","adapt","context","parsleyAdaptedCallback","unshift","apply","eventPrefix","lastIndexOf","substr","listen","callback","unsubscribeAll","emit","instanceGiven","asyncValidators","xhr","status","reverse","addAsyncValidator","ajaxOptions","csr","encodeURIComponent","remoteOptions","param","handleXhr","ajax","then","globals","global","isNativeEvent","originalEvent","isTrusted","fakeInputEvent","misbehaves","behavesOk","selector","install","inputEventPatched","uninstall"],"mappings":"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"}